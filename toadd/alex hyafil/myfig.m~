function r = myfig(mytitle, myXText, myYText, U, V, cpt, mywinposx, mywinposy, mywinwidth, mywinheight, ...				myfigwidth, myfigheight, myfontsize, figlim, myAxis, ...				myXTick, myYTick)%MYFIG plot a figure with many options, a title and normalized axes.%	function r = myfig(name, xaxis, yaxis, U, V, cpt,%				mywinposx, mywinposy,%				mywinwidth, mywinheight%				myfigwidth, myfigheight,%				myfontsize, figlim,%				myAxis, myXTick, myYTick, myXText, myYText)%	- xaxis, yaxis are the absciss and ordinate data for normalization. If empty, discount.%	- cpt: figure number. If cpt == 0, discount.%	- mywinposx, mywinposy: screen window position. If 0, discount.%	- mywinwidth, mywinheight: screen window size. If 0, discount.%	- myfigwidth, myfigheight: real figure size. If 0, discoubt%   #MATLAB 5/perso/graphics/figpreps.mif nargin==0, mytitle=''; endif nargin<2, myXText=[]; myYText=[]; endif nargin<4, U=[]; V=[]; endif nargin<6,    cpt=0; mywinposx=0; mywinposy=0;endif nargin<9,    mywinwidth=0; mywinheight=0; endif nargin<11,    myfigwidth=0; myfigheight=0; myfontsize=0; figlim=0;    myAxis=[]; myXTick=[]; myYTick=[]; endglob;if (cpt == 0)	lcpt = cptf;else	lcpt = cpt;end%% screen figure positionif (mywinposx == 0)	cwposx = wposx(lcpt);else	cwposx = mywinposx;endif (mywinposy == 0)	cwposy = wposy(lcpt);else	cwposy = mywinposy;end%% screen figure (window) sizeif (mywinwidth == 0)	cww = stdwinwidth;else	cww = mywinwidth;endif (mywinheight == 0)	cwh = stdwinheight;else	cwh = mywinheight;end%% (real) figure size (to export in Illustrator)if (myfigwidth == 0)	cfw = stdfigwidth;else	cfw = myfigwidth;endif (myfigheight == 0)	cfh = stdfigheight;else	cfh = myfigheight;end%% font sizeif (myfontsize == 0)	cfs = stdfontsize;else	cfs = myfontsize;end% normalizationa = .05;if ( ~isempty(U) & ~isempty(V) )	minx = min(U);	maxx = max(U);	miny = min(V) - a*abs(min(V));	maxy = max(V) + a*abs(max(V));	if ( (minx == maxx) | (miny == maxy) )		myAxis = [];	end		myAxis = [minx maxx miny maxy];endfigure(cptf);if (clearfigure)	clf;endhold on;set(gcf, 'Color', [1 1 1]); set(gcf, 'PaperUnits', 'centimeters');set(gcf, 'PaperPosition', [0.25 2.5 cfw cfh]); set(gcf,'InvertHardCopy','off');set(gcf, 'Position', [cwposx cwposy cww cwh]);cptf=cptf+1;% set(gca, 'Position', [0.1300 0.1100 0.7750 0.8150]); % defaultset(gca, 'Position', [0.1300 0.1100 0.8150 0.8150]);	% the same width and height are used for appropriate scaling		set(gca, 'fontSize', [cfs+1]);if ~isempty(myXText) xlabel(myXText); endif ~isempty(myYText) ylabel(myYText); endset(gca, 'fontSize', [cfs]);if ~isempty(myAxis) axis(myAxis); end%% font sizeset(gca, 'fontSize', [cfs]);%set(gca, 'fontSize', [12]);%% font name%set(gca, 'fontName', 'times');set(gca, 'fontName', 'helvetica');u = get(gca, 'Position');u(3) = u(3) - figlim*u(1);u(4) = u(4) - figlim*u(2);u(2) = (1+figlim)*u(2);u(1) = (1+figlim)*u(1);set(gca, 'Position', u);set(gca, 'XColor', [0 0 0]); set(gca, 'YColor', [0 0 0]);if ~isempty(myXTick)	set(gca, 'XTick', myXTick);else	if ~isempty(myAxis)		a = myAxis(1);		b = myAxis(2);		m = (b-a)/4;		set(gca, 'XTick', [a a+m a+2*m a+3*m b]);	endendif ~isempty(myYTick)	set(gca, 'YTick', myYTick);else	if ~isempty(myAxis)		a = myAxis(3);		b = myAxis(4);		m = (b-a)/4;		set(gca, 'YTick', [a a+m a+2*m a+3*m b]);	endendset(gca, 'TickDir', 'out'); set(gca, 'Box', 'off');% set(gca, 'fontSize', [cfs+1]);% if ~isempty(myXText) xlabel(myXText); end% if ~isempty(myYText) ylabel(myYText); end% set(gca, 'fontSize', [cfs]);if isempty(mytitle)	set(gcf, 'NumberTitle', 'on');else	set(gcf, 'NumberTitle', 'off');	set(gcf, 'Name', mytitle);    set(gcf, 'FileName', [mytitle '.ai']);end